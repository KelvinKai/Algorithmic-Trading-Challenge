seq_along(100)
seq_along(1,100)
seq_along(100)
?seq_along
paste(seq_along(10),"0")
paste(seq(1,10),"0")
paste(seq(1,10),"0", sep = "")
load("~/Desktop/sample_train.Rdata")
ifelse(seq(1,10) %% 2, paste(seq(1,10),"0",paste(seq(1,10),"1"))
paste(seq(1,nrow(sample_train)),"0", sep = "")
# save the matrix
save(train_mat,file ="train_mat.RData")
ifelse(seq(1,10) %% 2, paste(seq(1,10),"0",paste(seq(1,10),"1")
paste(seq(1,nrow(sample_train)),"0", sep = "")
# save the matrix
save(train_mat,file ="train_mat.RData")
ifelse(seq(1,10) %% 2, paste(seq(1,10),"0",paste(seq(1,10),"1")))
?ifelse
ifelse(seq(1,10) %% 2, paste(seq(1,10),"0"), paste(seq(1,10),"1"))
ifelse(seq(1,nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train)),"ask",sep = ""),
paste("row",seq(1,nrow(sample_train)),"bid",sep = ""))
colname <- ifelse(seq(1,nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train)),"ask",sep = ""),
paste("row",seq(1,nrow(sample_train)),"bid",sep = ""))
load("~/Desktop/Spring 2018/data science/project-4-open-project-group3/data/train_mat.RData")
dim(train_mat)
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train)),"ask",sep = ""),
paste("row",seq(1,nrow(sample_train)),"bid",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train)),"bid",sep = ""),
paste("row",seq(1,nrow(sample_train))-1,"ask",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train))-1,"bid",sep = ""),
paste("row",seq(1,nrow(sample_train))-1,"ask",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train)),"bid",sep = ""),
paste("row",seq(1,nrow(sample_train))-1,"ask",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train))*2-1,"bid",sep = ""),
paste("row",seq(1,nrow(sample_train)),"ask",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train))/2,"bid",sep = ""),
paste("row",seq(1,nrow(sample_train)),"ask",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train)),"bid",sep = ""),
paste("row",seq(1,nrow(sample_train)),"ask",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,2*nrow(sample_train)),"bid",sep = ""),
paste("row",seq(1,2*nrow(sample_train)),"ask",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,2*nrow(sample_train))%%2,"bid",sep = ""),
paste("row",seq(1,2*nrow(sample_train)),"ask",sep = ""))
?seq
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train),by = 0.5)*2,"bid",sep = ""),
paste("row",seq(1,2*nrow(sample_train)),"ask",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train),by = 0.5),"bid",sep = ""),
paste("row",seq(1,2*nrow(sample_train)),"ask",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train),by = 0.5),"bid",sep = ""),
paste("row",seq(1,2*nrow(sample_train),by = 0.5),"ask",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train),by = 0.5),"bid",sep = ""),
paste("row",seq(1,2*nrow(sample_train)),"ask",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train),by = 0.5),"bid",sep = ""),
paste("row",seq(1,2*nrow(sample_train),by=0.5),"ask",sep = ""))
colname <- ifelse(seq(1,2* nrow(sample_train)) %% 2, paste("row",seq(1,nrow(sample_train),by = 0.5),"bid",sep = ""),
paste("row",seq(1,2*nrow(sample_train),by=0.5)-0.5,"ask",sep = ""))
colname
tail(colname)
colnames(train_mat) <- colname
View(train_mat)
data_ts <- train_mat
data <- sample_train
??grepl
bid <- row[,grepl("bid",colnames(data))]
ask <- gather(ask,"time","ask",1:100)
??gather
library(tidyr)
data_ts <- matrix(0,nrow=100,ncol=nrow(data)*2)
for (i in 1:nrow(data)) {
row <- data[i,]
bid <- row[,grepl("bid",colnames(data))]
ask <- row[,grepl("ask",colnames(data))]
bid <- gather(bid,"time","bid",1:100)
ask <- gather(ask,"time","ask",1:100)
data_ts[,2*i-1] <- unlist(bid[,2])
data_ts[,2*i] <- unlist(ask[,2])
print(i)
}
dim(data_ts)
data_ts[1:100,1:6]
colname <- ifelse(seq(1,2* nrow(data)) %% 2, paste("row",seq(1,nrow(data),by = 0.5),"bid",sep = ""),
paste("row",seq(1,2*nrow(data),by=0.5)-0.5,"ask",sep = ""))
colnames(data_ts) <- colname
data_to_ts <- function(data){
library(tidyr)
# initiate matrix
data_ts <- matrix(0,nrow=100,ncol=nrow(data)*2)
# loop over overy row of dataset
for (i in 1:nrow(data)) {
row <- data[i,]
bid <- row[,grepl("bid",colnames(data))]
ask <- row[,grepl("ask",colnames(data))]
bid <- gather(bid,"time","bid",1:100)
ask <- gather(ask,"time","ask",1:100)
data_ts[,2*i-1] <- unlist(bid[,2])
data_ts[,2*i] <- unlist(ask[,2])
print(i)
}
# check the updated matrix
dim(data_ts)
colname <- ifelse(seq(1,2* nrow(data)) %% 2, paste("row",seq(1,nrow(data),by = 0.5),"bid",sep = ""),
paste("row",seq(1,2*nrow(data),by=0.5)-0.5,"ask",sep = ""))
# save the matrix
colnames(data_ts) <- colname
return(data_ts)
}
load("~/Desktop/sample_test.Rdata")
data_to_ts(sample_test)
test_mat <- data_to_ts(sample_test)
View(test_mat)
save(test_mat, file = "test_mat.Rdata")
getwd()
save(test_mat, file = "../data/test_mat.Rdata")
save(train_mat,file ="../data/train_mat.RData")
times <- seq(as.Date("2017-05-01"),length=100,by="days")
library("xts")
test_xts <- xts(test_mat,order.by = times)
arima <- function(x){
fit <- auto.arima(x,seasonal = F, max.p = 10, max.q = 10)
fcast <- forecast(fit, h = 50)
fcast <- fcast$mean
}
dim(test_xts)
test_pred <- apply(test_xts[1:50,],2,arima)
library("tseries")
library("forecast")
test_pred <- apply(test_xts[1:50,],2,arima)
View(test_mat)
save(test_pred, file = "../output/test_pred.Rdata")
library("Metrics")
rmse(test_mat[51:100,],test_pred)
